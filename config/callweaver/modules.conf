;
; CallWeaver configuration file
;
; Module Loader configuration file
;

[modules]
autoload=yes
;
; Any modules that need to be loaded before the CallWeaver core has been
; initialized (just after the logger has been initialized) can be loaded
; using 'preload'. This will frequently be needed if you wish to map all
; module configuration files into Realtime storage, since the Realtime
; driver will need to be loaded before the modules using those configuration
; files are initialized.
;
; An example of loading ODBC support would be:
;preload => res_odbc.so
;preload => res_config_odbc.so
;
; If you want, load the GTK console right away.  
; Don't load the KDE console since
; it's not as sophisticated right now.
;
noload => pbx_gtkconsole.so
;load => pbx_gtkconsole.so
noload => pbx_kdeconsole.so
;
load => res_musiconhold.so

;
; Don't load chan_alsa by default.  If you need it for debugging you
; can always load it manually from the CLI.
;
noload => chan_alsa.so

; Don't load chan_woomera by default.  Loading it without having any
; woomera Server running will be confusing.
noload => chan_woomera.so

; Don't load chan_capi by default.  Loading it without having
; configured prevents callweaver from working.
noload => chan_capi.so

; Don't load chan_misdn by default.  Loading it without having
; configured prevents callweaver from working.
noload => chan_misdn.so

; Jabber wont work without config
noload => res_jabber.so

noload => app_voicemail.so

;
; Module names listed in "global" section will have symbols globally
; exported to modules loaded after them.
;
[global]
